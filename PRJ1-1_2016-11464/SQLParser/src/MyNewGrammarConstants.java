/* Generated By:JavaCC: Do not edit this line. MyNewGrammarConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MyNewGrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EXIT = 5;
  /** RegularExpression Id. */
  int INT = 6;
  /** RegularExpression Id. */
  int CHAR = 7;
  /** RegularExpression Id. */
  int DATE = 8;
  /** RegularExpression Id. */
  int CREATE_TABLE = 9;
  /** RegularExpression Id. */
  int NOT_NULL = 10;
  /** RegularExpression Id. */
  int PRIMARY_KEY = 11;
  /** RegularExpression Id. */
  int FOREIGN_KEY = 12;
  /** RegularExpression Id. */
  int REFERENCES = 13;
  /** RegularExpression Id. */
  int DROP_TABLE = 14;
  /** RegularExpression Id. */
  int DESC = 15;
  /** RegularExpression Id. */
  int SHOW_TABLES = 16;
  /** RegularExpression Id. */
  int SELECT = 17;
  /** RegularExpression Id. */
  int ALL = 18;
  /** RegularExpression Id. */
  int AS = 19;
  /** RegularExpression Id. */
  int FROM = 20;
  /** RegularExpression Id. */
  int WHERE = 21;
  /** RegularExpression Id. */
  int OR = 22;
  /** RegularExpression Id. */
  int AND = 23;
  /** RegularExpression Id. */
  int IS = 24;
  /** RegularExpression Id. */
  int NOT = 25;
  /** RegularExpression Id. */
  int NULL = 26;
  /** RegularExpression Id. */
  int INSERT_INTO = 27;
  /** RegularExpression Id. */
  int VALUES = 28;
  /** RegularExpression Id. */
  int DELETE_FROM = 29;
  /** RegularExpression Id. */
  int SEMICOLON = 30;
  /** RegularExpression Id. */
  int LEFT_PAREN = 31;
  /** RegularExpression Id. */
  int RIGHT_PAREN = 32;
  /** RegularExpression Id. */
  int COMMA = 33;
  /** RegularExpression Id. */
  int UNDERSCORE = 34;
  /** RegularExpression Id. */
  int INT_VALUE = 35;
  /** RegularExpression Id. */
  int SIGN = 36;
  /** RegularExpression Id. */
  int DIGIT = 37;
  /** RegularExpression Id. */
  int LEGAL_IDENTIFIER = 38;
  /** RegularExpression Id. */
  int ALPHABET = 39;
  /** RegularExpression Id. */
  int PERIOD = 40;
  /** RegularExpression Id. */
  int COMP_OP = 41;
  /** RegularExpression Id. */
  int CHAR_STRING = 42;
  /** RegularExpression Id. */
  int DATE_VALUE = 43;
  /** RegularExpression Id. */
  int NNNN = 44;
  /** RegularExpression Id. */
  int NN = 45;
  /** RegularExpression Id. */
  int NON_QUOTE_CHARACTER = 46;
  /** RegularExpression Id. */
  int NON_QUOTE_SPECIAL_CHARACTERS = 47;
  /** RegularExpression Id. */
  int SPACE = 48;
  /** RegularExpression Id. */
  int QUOTE2 = 49;
  /** RegularExpression Id. */
  int QUOTE1 = 50;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int STATE1 = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\" \"",
    "\"exit\"",
    "\"int\"",
    "\"char\"",
    "\"date\"",
    "\"create table\"",
    "\"not null\"",
    "\"primary key\"",
    "\"foreign key\"",
    "\"references\"",
    "\"drop table\"",
    "\"desc\"",
    "\"show tables\"",
    "\"select\"",
    "\"*\"",
    "\"as\"",
    "\"from\"",
    "\"where\"",
    "\"or\"",
    "\"and\"",
    "\"is\"",
    "\"not\"",
    "\"null\"",
    "\"insert into\"",
    "\"values\"",
    "\"delete from\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"_\"",
    "<INT_VALUE>",
    "<SIGN>",
    "<DIGIT>",
    "<LEGAL_IDENTIFIER>",
    "<ALPHABET>",
    "\".\"",
    "<COMP_OP>",
    "<CHAR_STRING>",
    "<DATE_VALUE>",
    "<NNNN>",
    "<NN>",
    "<NON_QUOTE_CHARACTER>",
    "<NON_QUOTE_SPECIAL_CHARACTERS>",
    "\" \"",
    "\"\\\'\"",
    "\"\\\'\"",
  };

}
